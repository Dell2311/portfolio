{"version":3,"file":"static/chunks/862.a6fa8a9d2edf042e.js","mappings":"sFAC8DA,SAG7DC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAA6C,aAE9C,SAAAC,EAAAC,CAAA,EAAuC,OAAAA,GAAA,iBAAAA,GAAA,YAAAA,EAAAA,EAAA,CAA4D,QAAAA,CAAA,EAEnG,IAAAC,EAAAF,EAAAF,GACAK,EAAAH,EAAAD,GA6BA,SAAAK,EAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAC,OAAAD,IAAA,CAAAF,GACA,GAAAG,OAAAC,qBAAA,EACA,IAAAC,EAAAF,OAAAC,qBAAA,CAAAJ,EACAC,CAAAA,GAAAI,CAAAA,EAAAA,EAAAC,MAAA,UAAAC,CAAA,EACA,OAAAJ,OAAAK,wBAAA,CAAAR,EAAAO,GAAAE,UAAA,EACO,EAAAP,EAAAQ,IAAA,CAAAC,KAAA,CAAAT,EAAAG,EACP,CACA,OAAAH,CACA,CACA,SAAAU,EAAAC,CAAA,EACA,QAAAC,EAAA,EAAoBA,EAAAC,UAAAC,MAAA,CAAsBF,IAAA,CAC1C,IAAAG,EAAA,MAAAF,SAAA,CAAAD,EAAA,CAAAC,SAAA,CAAAD,EAAA,GACAA,CAAAA,EAAA,EAAAf,EAAAI,OAAAc,GAAA,IAAAC,OAAA,UAAAC,CAAA,MAQAA,EAAAC,EAAAD,EAPAA,EAOAC,EAPAH,CAAA,CAAAE,EAAA,CASAA,CADAA,EAAAE,SAwEAC,CAAA,EACA,IAAAH,EAAAI,SAXAC,CAAA,CAAAC,CAAA,EACA,oBAAAD,GAAAA,OAAAA,EAAA,OAAAA,EACA,IAAAE,EAAAF,CAAA,CAAAG,OAAAC,WAAA,EACA,GAAAF,KAAAG,IAAAH,EAAA,CACA,IAAAI,EAAAJ,EAAAK,IAAA,CAAAP,EAAAC,GAAA,WACA,oBAAAK,EAAA,OAAAA,CACA,gEACA,CACA,OAAAL,WAAAA,EAAAO,OAAAC,MAAA,EAAAT,EACA,EAEAF,EAAA,UACA,uBAAAH,EAAAA,EAAAa,OAAAb,EACA,EA3EAA,EAAA,IARAN,EAUAV,OAAA+B,cAAA,CAVArB,EAUAM,EAAA,CACAC,MAAAA,EACAX,WAAA,GACA0B,aAAA,GACAC,SAAA,EACA,GAEAC,CAAA,CAAAlB,EAAA,CAAAC,CAhBA,GAAOjB,OAAAmC,yBAAA,CAAAnC,OAAAoC,gBAAA,CAAA1B,EAAAV,OAAAmC,yBAAA,CAAArB,IAAAlB,EAAAI,OAAAc,IAAAC,OAAA,UAAAC,CAAA,EACPhB,OAAA+B,cAAA,CAAArB,EAAAM,EAAAhB,OAAAK,wBAAA,CAAAS,EAAAE,GACA,EACA,CACA,OAAAN,CACA,CA2BA,SAAA2B,EAAAvB,CAAA,CAAAwB,CAAA,EACA,GAAAxB,MAAAA,EAAA,SACA,IACAE,EAAAL,EADAD,EAAA6B,SAdAzB,CAAA,CAAAwB,CAAA,EACA,GAAAxB,MAAAA,EAAA,SACA,IAEAE,EAAAL,EAFAD,EAAA,GACA8B,EAAAxC,OAAAD,IAAA,CAAAe,GAEA,IAAAH,EAAA,EAAgBA,EAAA6B,EAAA3B,MAAA,CAAuBF,IACvCK,EAAAwB,CAAA,CAAA7B,EAAA,CACA2B,EAAAG,OAAA,CAAAzB,IAAA,GACAN,CAAAA,CAAA,CAAAM,EAAA,CAAAF,CAAA,CAAAE,EAAA,EAEA,OAAAN,CACA,EAGAI,EAAAwB,GAEA,GAAAtC,OAAAC,qBAAA,EACA,IAAAyC,EAAA1C,OAAAC,qBAAA,CAAAa,GACA,IAAAH,EAAA,EAAkBA,EAAA+B,EAAA7B,MAAA,CAA6BF,IAC/CK,EAAA0B,CAAA,CAAA/B,EAAA,EACA2B,CAAAA,EAAAG,OAAA,CAAAzB,IAAA,IACAhB,OAAA2C,SAAA,CAAAC,oBAAA,CAAAhB,IAAA,CAAAd,EAAAE,IACAN,CAAAA,CAAA,CAAAM,EAAA,CAAAF,CAAA,CAAAE,EAAA,CAEA,CACA,OAAAN,CACA,CAeA,SAAAmC,EAAAC,CAAA,CAAAC,CAAA,EACAA,CAAAA,MAAAA,GAAAA,EAAAD,EAAAjC,MAAA,GAAAkC,CAAAA,EAAAD,EAAAjC,MAAA,EACA,QAAAF,EAAA,EAAAqC,EAAA,MAAAD,GAA2CpC,EAAAoC,EAASpC,IAAAqC,CAAA,CAAArC,EAAA,CAAAmC,CAAA,CAAAnC,EAAA,CACpD,OAAAqC,CACA,CAmBA,IAAAC,EAAA,yQACAC,EAAA,SAAAC,CAAA,CAAAC,CAAA,EACA,IAvCAN,EAuCAO,EAAAF,EAAAE,aAAA,CACAC,EAAAH,EAAAG,IAAA,CACAC,EAAAJ,EAAAI,QAAA,CACAC,EAAAL,EAAAK,cAAA,CACAC,EAAAN,EAAAM,UAAA,CACAC,EAAAP,EAAAO,cAAA,CACAC,EAAAR,EAAAQ,YAAA,CACAC,EAAAT,EAAAS,cAAA,CACAC,EAAAV,EAAAU,aAAA,CACAC,EAAAX,EAAAW,WAAA,CACAC,EAAAZ,EAAAY,YAAA,CACAC,EAAAb,EAAAa,cAAA,CACAC,EAAAd,EAAAc,WAAA,CACAC,EAAAf,EAAAe,SAAA,CACAf,EAAAgB,SAAA,CACAhB,EAAAiB,QAAA,CACAjB,EAAAkB,IAAA,CACAlB,EAAAmB,UAAA,CACAnB,EAAAoB,gBAAA,CACA,IAAAC,EAAAnC,EAAAc,EAAAF,GAEAwB,EA3DAC,SAEA5B,CAAA,EACA,GAAA6B,MAAAC,OAAA,CAAA9B,GAAA,OAAAA,CACA,EALAA,EA2DAvD,EAAAsF,QAAA,OA1DAC,SA1FAhC,CAAA,CAAAnC,CAAA,EACA,IAAAoE,EAAA,MAAAjC,EAAA,yBAAAtB,QAAAsB,CAAA,CAAAtB,OAAAwD,QAAA,GAAAlC,CAAA,eACA,SAAAiC,EAAA,CACA,IAAAE,EACAC,EACAC,EACAC,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACA,IACA,GAAAJ,EAAA,CAAAJ,EAAAA,EAAAnD,IAAA,CAAAkB,EAAA,EAAA0C,IAAA,KAAA7E,EAAA,CACA,GAAAX,OAAA+E,KAAAA,EAAA,OACAO,EAAA,EACA,MAAU,KAAY,CAAAA,CAAAA,EAAA,CAAAL,EAAAE,EAAAvD,IAAA,CAAAmD,EAAA,EAAAU,IAAA,GAAAJ,CAAAA,EAAA9E,IAAA,CAAA0E,EAAAhE,KAAA,EAAAoE,EAAAxE,MAAA,GAAAF,CAAAA,EAA6E2E,EAAA,IACnG,CAAQ,MAAAI,EAAA,CACRH,EAAA,GAAAL,EAAAQ,CACA,QAAQ,CACR,IACA,IAAAJ,GAAA,MAAAP,EAAAY,MAAA,EAAAP,CAAAA,EAAAL,EAAAY,MAAA,GAAA3F,OAAAoF,KAAAA,CAAA,QACA,QAAU,CACV,GAAAG,EAAA,MAAAL,CACA,CACA,CACA,OAAAG,CACA,CACA,EAgEAvC,EA2DA,IA3DA8C,SAKAC,CAAA,CAAAC,CAAA,EACA,GAAAD,GACA,oBAAAA,EAAA,OAAAhD,EAAAgD,EAAAC,GACA,IAAAC,EAAA/F,OAAA2C,SAAA,CAAAqD,QAAA,CAAApE,IAAA,CAAAiE,GAAAI,KAAA,OAEA,GADA,WAAAF,GAAAF,EAAAK,WAAA,EAAAH,CAAAA,EAAAF,EAAAK,WAAA,CAAA7B,IAAA,EACA0B,QAAAA,GAAAA,QAAAA,EAAA,OAAApB,MAAAwB,IAAA,CAAAN,GACA,GAAAE,cAAAA,GAAA,2CAAAK,IAAA,CAAAL,GAAA,OAAAlD,EAAAgD,EAAAC,GACA,EAZAhD,EA2DA,IA3DAuD,WAmBA,4JACA,IAwCAC,EAAA7B,CAAA,IACA8B,EAAA9B,CAAA,IACA+B,EAAAjH,EAAAkH,MAAA,GACAC,EAAAnH,EAAAkH,MAAA,OAyGAE,EAAA,WACA,IACAC,EADAC,EAAAjG,UAAAC,MAAA,IAAAD,KAAAc,IAAAd,SAAA,IAAAA,SAAA,OAGA,GAAA8F,EAAAI,OAAA,EAIA,OAAAF,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAG,OAAA,GAEA,IAAAC,EAAAvG,EAAAA,EAAAA,EAAA,GAAkE0C,GAAA0D,GAAA,GAA4B,CAC9FI,UAAAP,EAAAI,OAAA,GAMA,OAHAN,EAAAM,OAAA,CAAApH,EAAA,QAAAiH,aAAA,CAAAK,GACAT,EAAA,EAAAC,EAAAM,OAAA,EAEA,WACA,IAAAF,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAG,OAAA,GACAP,EAAAM,OAAA,CAAApF,KAAAA,CACA,EACA,EAoHA,OAhHAnC,EAAA2H,SAAA,YACA,IAAAC,EAAAR,IAEA,kBACA,OAAAQ,MAAAA,EAAA,OAAAA,GACA,CAEA,EAAK,CAAA9D,EAAAC,EAAA,EAEL/D,EAAA2H,SAAA,YACAV,EAAAM,OAAA,EAGAN,CAAAA,EAAAM,OAAA,CAAAvD,QAAA,GAAAA,CAAA,CACA,EAAK,CAAAA,EAAA,EAELhE,EAAA2H,SAAA,YACA,GAAAV,EAAAM,OAAA,EAIA,IAAAtD,EAAA,CACAgD,EAAAM,OAAA,CAAAM,aAAA,KACA,MACA,CAEAzC,MAAAC,OAAA,CAAApB,IAAAA,EAAA3C,MAAA,GAKA2F,CAAAA,EAAAM,OAAA,CAAAO,eAAA,CAAA7D,CAAA,KAAAgD,EAAAM,OAAA,CAAAO,eAAA,CAAA7D,CAAA,MACAgD,CAAAA,EAAAM,OAAA,CAAAO,eAAA,CAAA7D,CAAA,KAGAgD,EAAAM,OAAA,CAAAQ,UAAA,CAAA9D,CAAA,IAAAA,CAAA,MACA,EAAK,CAAAA,EAAA,EASLjE,EAAA2H,SAAA,YAgCA,IAAAK,EAAAC,CA/BA,CACAnD,KAAA,WACAoD,QAAAhE,CACA,EAAO,CACPY,KAAA,eACAoD,QAAA/D,CACA,EAAO,CACPW,KAAA,aACAoD,QAAA9D,CACA,EAAO,CACPU,KAAA,eACAoD,QAAA7D,CACA,EAAO,CACPS,KAAA,eACAoD,QAAA5D,CACA,EAAO,CACPQ,KAAA,aACAoD,QAAA3D,CACA,EAAO,CACPO,KAAA,cACAoD,QAAA1D,CACA,EAAO,CACPM,KAAA,gBACAoD,QAAAzD,CACA,EAAO,CACPK,KAAA,YACAoD,QAAAxD,CACA,EAAO,CACPI,KAAA,UACAoD,QAAAvD,CACA,EAAO,CACP/D,MAAA,UAAAuH,CAAA,EACA,OAAAA,MAAAA,EAAAD,OAAA,GAEA,GAAAF,EAAA1G,MAAA,EAGA,IAAA8G,EAAAJ,EAAAK,GAAA,CAMA,SAAAF,CAAA,EACA,IAAAd,EAGA,OAFA,OAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAiB,gBAAA,CAAAH,EAAArD,IAAA,CAAAqD,EAAAD,OAAA,EAEA,WACA,IAAAb,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAkB,mBAAA,CAAAJ,EAAArD,IAAA,CAAAqD,EAAAD,OAAA,CACA,CACA,GAEA,kBACAE,EAAA5G,OAAA,UAAAgH,CAAA,EACA,OAAAA,GACA,EACA,EACA,EAAK,CAAAtE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,EAQL,CACA8D,KALArI,EAAA,QAAAsI,aAAA,OAAAxH,EAAA,CACA2C,MAAAA,EACA8E,IAAAxB,CACA,EAAKlC,IAGL2D,KA5OA,WACA,IAAAvB,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAuB,IAAA,EACA,EA0OAC,KAtOA,WACA,IAAAxB,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAwB,IAAA,EACA,EAoOAC,MAhOA,WACA,IAAAzB,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAyB,KAAA,EACA,EA8NAC,SAzNA,SAAAC,CAAA,EACA,IAAA3B,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAA0B,QAAA,CAAAC,EACA,EAuNAC,YAxMA,SAAAvH,CAAA,CAAAwH,CAAA,EACA,IAAA7B,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAA4B,WAAA,CAAAvH,EAAAwH,EACA,EAsMAC,YAlNA,SAAAzH,CAAA,CAAAwH,CAAA,EACA,IAAA7B,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAA8B,WAAA,CAAAzH,EAAAwH,EACA,EAgNAE,aAlMA,SAAAC,CAAA,EACA,IAAAhC,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAA+B,YAAA,CAAAC,EACA,EAgMAC,aA1LA,SAAAC,CAAA,CAAAC,CAAA,EACA,IAAAnC,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAiC,YAAA,CAAAC,EAAAC,EACA,EAwLAC,YAnLA,SAAAC,CAAA,EACA,IAAArC,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAoC,WAAA,CAAAC,EACA,EAiLAC,YA5KA,SAAAC,CAAA,EACA,IAAAvC,EACA,cAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,EAAA,OAAAA,EAAAsC,WAAA,CAAAC,EACA,EA0KApC,QAtKA,WACA,IAAAH,CACA,QAAAA,CAAAA,EAAAJ,EAAAM,OAAA,GAAAF,KAAA,IAAAA,GAAAA,EAAAG,OAAA,GAGAP,EAAAM,OAAA,CAAApF,KAAAA,CACA,EAiKA0H,sBAAA1C,EACAJ,gBAAAA,EACA+C,cAAA7C,EAAAM,OAAA,CAEA,EAwBAwC,EAAA,SAAAC,CAAA,EACA,IAAAC,EAAAD,EAAAC,UAAA,CACAH,EAAAE,EAAAF,aAAA,CACAI,EAAAF,EAAAE,IAAA,CACAC,EAAAH,EAAAG,OAAA,CACAnK,EAAA2H,SAAA,YACA,IAMAyC,EACAC,EAqDAC,EAgDAC,EAGAC,EA/GAC,EAAAR,EAAA1C,OAAA,CACA,MAAAuC,GAAAK,EAAA7I,MAAA,CAwHA,OArHAwI,EAAAjB,IAAA,GAqHAqB,GACA,aACA,OArHAE,EAAA,KACAC,EAAA,WACA,IAlCAK,EACAC,EACAC,EAgCAC,GAjCAF,EAAAD,CADAA,EAAAhD,EAAAoD,qBAAA,IACAH,GAAA,CACAC,EAAAF,EAAAE,MAAA,CAGArD,CAFAwD,OAAAC,WAAA,CAAAL,CAAA,EACAI,CAAAA,OAAAC,WAAA,CAAAJ,CAAA,GAgCAK,EAAAd,EAAAe,IAAA,UAAAC,CAAA,EACA,IAAAC,EAAAD,EAAAC,UAAA,CACA,OAAAA,GAAAP,GAAAO,CAAA,KAAAP,GAAAO,CAAA,MAGA,GAAAH,GAGA,GAAAA,SAAAA,EAAAI,IAAA,EAAAJ,EAAAG,UAAA,EAAAH,IAAAA,EAAAK,MAAA,CAAAhK,MAAA,EAEA,IAAAiK,EAAAN,EAAAK,MAAA,IAAAE,KAAAC,IAAA,EAAAZ,EAAAI,EAAAG,UAAA,KAAAH,CAAAA,EAAAG,UAAA,IAAAH,EAAAG,UAAA,KAAAH,EAAAK,MAAA,KAEAxB,EAAAb,WAAA,CAAAsC,EAAAzB,EAAA4B,UAAA,MACA,CACA,SAAAT,EAAAI,IAAA,GAEAjB,OAAAA,GAEAN,EAAAR,YAAA,CAAA2B,EAAAK,MAAA,KACAlB,EAAAa,EAAAK,MAAA,EAIAlB,IAAAa,EAAAK,MAAA,EAEAxB,EAAAR,YAAA,CAAA2B,EAAAK,MAAA,KACAlB,EAAAa,EAAAK,MAAA,EACgBxB,EAAA6B,QAAA,GAEhB7B,EAAAR,YAAA,CAAA2B,EAAAK,MAAA,KACAlB,EAAAa,EAAAK,MAAA,GAIA,SAAAL,EAAAI,IAAA,EAAAvB,EAAA6B,QAAA,GAEA7B,EAAAjC,aAAA,KACAiC,EAAAlB,IAAA,IAEA,SAAAqC,EAAAI,IAAA,EAEAvB,EAAAb,WAAA,CAAAgC,EAAAK,MAAA,IAAAxB,EAAA4B,UAAA,OAEA,EACAE,SAAAtD,gBAAA,UAAA+B,GACA,WACAuB,SAAArD,mBAAA,UAAA8B,EACA,CAmEA,cACA,OAjEAC,EAAA,SAAA1E,CAAA,CAAAiG,CAAA,EACA,IAAAC,EAAAlG,EACAmG,EAAAF,EAEA,GAAAC,KAAAA,GAAAC,KAAAA,EAAA,CAEA,IArFAC,EAAAC,EACAC,EACAvB,EAmFAwB,GArFAH,EAqFAF,EArFAG,EAqFAF,EAnFApB,EAAAuB,CADAA,EAAAxE,EAAAoD,qBAAA,IACAH,GAAA,CAMA,CACAmB,EAHA,CAAAE,EAHAE,EAAAE,IAAA,EACAF,EAAAG,KAAA,CAMAN,EAHA,CAAAE,EAAAtB,CAAA,EAFAuB,EAAAtB,MAAA,GAkFAkB,EAAAK,EAAAL,CAAA,CACAC,EAAAI,EAAAJ,CAAA,CAGA,IAAAd,EAAAd,EAAAe,IAAA,UAAAoB,CAAA,EACA,IAAAC,EAAAD,EAAAC,QAAA,QACA,GAAAnH,MAAAC,OAAA,CAAAkH,EAAAT,CAAA,GAAA1G,MAAAC,OAAA,CAAAkH,EAAAR,CAAA,EACAD,GAAAS,EAAAT,CAAA,KAAAA,GAAAS,EAAAT,CAAA,KAAAC,GAAAQ,EAAAR,CAAA,KAAAA,GAAAQ,EAAAR,CAAA,KAEAQ,CAAAA,CAAAA,GAAAhK,OAAAiK,KAAA,CAAAD,EAAAT,CAAA,GAAAvJ,OAAAiK,KAAA,CAAAD,EAAAR,CAAA,IACAD,IAAAS,EAAAT,CAAA,EAAAC,IAAAQ,EAAAR,CAAA,GAKA,GAAAd,GAIA,GAAAA,SAAAA,EAAAI,IAAA,EAAAJ,EAAAsB,QAAA,EAAAnH,MAAAC,OAAA,CAAA4F,EAAAsB,QAAA,CAAAT,CAAA,GAAA1G,MAAAC,OAAA,CAAA4F,EAAAsB,QAAA,CAAAR,CAAA,GAAAd,IAAAA,EAAAK,MAAA,CAAAhK,MAAA,EAEA,IAAAmL,EAAA,CAAAX,EAAAb,EAAAsB,QAAA,CAAAT,CAAA,KAAAb,CAAAA,EAAAsB,QAAA,CAAAT,CAAA,IAAAb,EAAAsB,QAAA,CAAAT,CAAA,KACAY,EAAA,CAAAX,EAAAd,EAAAsB,QAAA,CAAAR,CAAA,KAAAd,CAAAA,EAAAsB,QAAA,CAAAR,CAAA,IAAAd,EAAAsB,QAAA,CAAAR,CAAA,KACAjC,EAAAR,YAAA,CAAA2B,EAAAK,MAAA,KACAxB,EAAAb,WAAA,CAAAuC,KAAAC,IAAA,EAAAgB,EAAAC,CAAA,IAAAzB,CAAAA,EAAAK,MAAA,IAAAL,EAAAK,MAAA,SACA,CACA,SAAAL,EAAAI,IAAA,EACAvB,EAAAR,YAAA,CAAA2B,EAAAK,MAAA,KAEA,SAAAL,EAAAI,IAAA,GAEAvB,EAAA6B,QAAA,EACA7B,EAAAjC,aAAA,KAEAiC,EAAAR,YAAA,CAAA2B,EAAAK,MAAA,GAEA,SAAAL,EAAAI,IAAA,EACAvB,EAAAb,WAAA,CAAAgC,EAAAK,MAAA,QAEA,EACAf,EAAA,SAAAoC,CAAA,EACArC,EAAAqC,EAAAC,OAAA,CAAAD,EAAAE,OAAA,CACA,EACArC,EAAA,WACAF,EAAA,MACA,EACAG,EAAAnC,gBAAA,aAAAiC,GACAE,EAAAnC,gBAAA,YAAAkC,GACA,WACAC,EAAAlC,mBAAA,aAAAgC,GACAE,EAAAlC,mBAAA,YAAAiC,EACA,CAOA,CAEA,EAAK,CAAAN,EAAAJ,EAAA,CACL,EACAgD,EAAA,SAAAC,CAAA,EACA,IAAA5C,EAAA4C,EAAA5C,OAAA,CACAD,EAAA6C,EAAA7C,IAAA,CACA8C,EAAAD,EAAAC,SAAA,CACAlD,EAAAkD,EAAAlD,aAAA,CACArB,EAAAuE,EAAAvE,IAAA,CAQA,OANAsB,EAAA,CACAI,QAAAA,EACAL,cAAAA,EACAI,KAAAA,EACAD,WALA+C,EAAAnD,qBAAA,GAOApB,CACA,EAEAwE,EAAA,0BAwEAxM,OAAA+B,cAAA,CAAA1C,EAAA,gBACAiB,WAAA,GACAmM,IAAA,WAAuB,OAAA/M,EAAA,QACvB,GACAL,EAAA,QA3EA,SAAA8D,CAAA,EAEA,IADAyD,EAAA8F,EAAAC,EACAvJ,EAAAD,EAAAC,KAAA,CACAwJ,EAAAzJ,EAAAyJ,aAAA,CAKAC,EAAA3J,EAJAb,EAAAc,EAAAqJ,GAIApJ,GACA4E,EAAA6E,EAAA7E,IAAA,CACAG,EAAA0E,EAAA1E,IAAA,CACAC,EAAAyE,EAAAzE,IAAA,CACAC,EAAAwE,EAAAxE,KAAA,CACAC,EAAAuE,EAAAvE,QAAA,CACAE,EAAAqE,EAAArE,WAAA,CACAE,EAAAmE,EAAAnE,WAAA,CACAC,EAAAkE,EAAAlE,YAAA,CACAE,EAAAgE,EAAAhE,YAAA,CACAG,EAAA6D,EAAA7D,WAAA,CACAE,EAAA2D,EAAA3D,WAAA,CACAnC,EAAA8F,EAAA9F,OAAA,CACAqC,EAAAyD,EAAAzD,qBAAA,CACA9C,EAAAuG,EAAAvG,eAAA,CACA+C,EAAAwD,EAAAxD,aAAA,CAyBA,OArBA9J,EAAA2H,SAAA,YACA/D,EAAAgB,SAAA,EACAhB,CAAAA,EAAAgB,SAAA,CAAA2C,OAAA,EACAqB,KAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAI,YAAAA,EACAF,YAAAA,EACAG,aAAAA,EACAE,aAAAA,EACAG,YAAAA,EACAE,YAAAA,EACAnC,QAAAA,EACAqC,sBAAAA,EACA9C,gBAAAA,EACA+C,cAAAA,CACA,EAGA,EAAK,QAAAzC,CAAAA,EAAAzD,EAAAgB,SAAA,GAAAyC,KAAA,IAAAA,EAAA,OAAAA,EAAAE,OAAA,GACLuF,EAAA,CACAE,UAAA,CACAvE,KAAAA,EACAG,KAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAE,YAAAA,EACAE,YAAAA,EACAC,aAAAA,EACAE,aAAAA,EACAG,YAAAA,EACAE,YAAAA,EACAnC,QAAAA,EACAqC,sBAAAA,EACA9C,gBAAAA,EACA+C,cAAAA,CACA,EACAK,QAAA,OAAAgD,CAAAA,EAAAE,MAAAA,EAAA,OAAAA,EAAAlD,OAAA,GAAAgD,KAAA,IAAAA,EAAAA,EAAA,GACAjD,KAAA,OAAAkD,CAAAA,EAAAC,MAAAA,EAAA,OAAAA,EAAAnD,IAAA,GAAAkD,KAAA,IAAAA,EAAAA,EAAA,QACA,EACA,EAOAtN,EAAA6D,SAAA,CAAAA,EACA7D,EAAAgN,sBAAA,CAAAA,EAEArM,OAAA+B,cAAA,CAAA1C,EAAA,cAAiD4B,MAAA,IAEjD,EAzqB8D5B,EAAoByN,EAAQ,MAAeA,EAAQ","sources":["webpack://_N_E/./node_modules/lottie-react/build/index.umd.js","webpack://_N_E/<anon>"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('lottie-web'), require('react')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'lottie-web', 'react'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"lottie-react\"] = {}, global.Lottie, global.React));\n})(this, (function (exports, lottie, React) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var lottie__default = /*#__PURE__*/_interopDefaultLegacy(lottie);\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n  function _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n      var _s,\n        _e,\n        _x,\n        _r,\n        _arr = [],\n        _n = !0,\n        _d = !1;\n      try {\n        if (_x = (_i = _i.call(arr)).next, 0 === i) {\n          if (Object(_i) !== _i) return;\n          _n = !1;\n        } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n      } catch (err) {\n        _d = !0, _e = err;\n      } finally {\n        try {\n          if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n  }\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  var _excluded$1 = [\"animationData\", \"loop\", \"autoplay\", \"initialSegment\", \"onComplete\", \"onLoopComplete\", \"onEnterFrame\", \"onSegmentStart\", \"onConfigReady\", \"onDataReady\", \"onDataFailed\", \"onLoadedImages\", \"onDOMLoaded\", \"onDestroy\", \"lottieRef\", \"renderer\", \"name\", \"assetsPath\", \"rendererSettings\"];\n  var useLottie = function useLottie(props, style) {\n    var animationData = props.animationData,\n      loop = props.loop,\n      autoplay = props.autoplay,\n      initialSegment = props.initialSegment,\n      onComplete = props.onComplete,\n      onLoopComplete = props.onLoopComplete,\n      onEnterFrame = props.onEnterFrame,\n      onSegmentStart = props.onSegmentStart,\n      onConfigReady = props.onConfigReady,\n      onDataReady = props.onDataReady,\n      onDataFailed = props.onDataFailed,\n      onLoadedImages = props.onLoadedImages,\n      onDOMLoaded = props.onDOMLoaded,\n      onDestroy = props.onDestroy;\n      props.lottieRef;\n      props.renderer;\n      props.name;\n      props.assetsPath;\n      props.rendererSettings;\n      var rest = _objectWithoutProperties(props, _excluded$1);\n    var _useState = React.useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      animationLoaded = _useState2[0],\n      setAnimationLoaded = _useState2[1];\n    var animationInstanceRef = React.useRef();\n    var animationContainer = React.useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    var play = function play() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    var stop = function stop() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    var pause = function pause() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    var setSpeed = function setSpeed(speed) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    var goToAndPlay = function goToAndPlay(value, isFrame) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    var goToAndStop = function goToAndStop(value, isFrame) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    var setDirection = function setDirection(direction) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    var playSegments = function playSegments(segments, forceFlag) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    var setSubframe = function setSubframe(useSubFrames) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    var getDuration = function getDuration(inFrames) {\n      var _a;\n      return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\n    };\n    /**\n     * Destroy animation\n     */\n    var destroy = function destroy() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n      // Removing the reference to the animation so separate cleanups are skipped.\n      // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n      animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    var loadAnimation = function loadAnimation() {\n      var forcedConfigs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _a;\n      // Return if the container ref is null\n      if (!animationContainer.current) {\n        return;\n      }\n      // Destroy any previous instance\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n      // Build the animation configuration\n      var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {\n        container: animationContainer.current\n      });\n      // Save the animation instance\n      animationInstanceRef.current = lottie__default[\"default\"].loadAnimation(config);\n      setAnimationLoaded(!!animationInstanceRef.current);\n      // Return a function that will clean up\n      return function () {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        animationInstanceRef.current = undefined;\n      };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n    React.useEffect(function () {\n      var onUnmount = loadAnimation();\n      // Clean up on unmount\n      return function () {\n        return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]);\n    // Update the autoplay state\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      }\n      animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]);\n    // Update the initial segment state\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      }\n      // When null should reset to default animation length\n      if (!initialSegment) {\n        animationInstanceRef.current.resetSegments(true);\n        return;\n      }\n      // If it's not a valid segment, do nothing\n      if (!Array.isArray(initialSegment) || !initialSegment.length) {\n        return;\n      }\n      // If the current position it's not in the new segment\n      // set the current position to start\n      if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n        animationInstanceRef.current.currentRawFrame = initialSegment[0];\n      }\n      // Update the segment\n      animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    React.useEffect(function () {\n      var partialListeners = [{\n        name: \"complete\",\n        handler: onComplete\n      }, {\n        name: \"loopComplete\",\n        handler: onLoopComplete\n      }, {\n        name: \"enterFrame\",\n        handler: onEnterFrame\n      }, {\n        name: \"segmentStart\",\n        handler: onSegmentStart\n      }, {\n        name: \"config_ready\",\n        handler: onConfigReady\n      }, {\n        name: \"data_ready\",\n        handler: onDataReady\n      }, {\n        name: \"data_failed\",\n        handler: onDataFailed\n      }, {\n        name: \"loaded_images\",\n        handler: onLoadedImages\n      }, {\n        name: \"DOMLoaded\",\n        handler: onDOMLoaded\n      }, {\n        name: \"destroy\",\n        handler: onDestroy\n      }];\n      var listeners = partialListeners.filter(function (listener) {\n        return listener.handler != null;\n      });\n      if (!listeners.length) {\n        return;\n      }\n      var deregisterList = listeners.map(\n      /**\n       * Handle the process of adding an event listener\n       * @param {Listener} listener\n       * @return {Function} Function that deregister the listener\n       */\n      function (listener) {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n        // Return a function to deregister this listener\n        return function () {\n          var _a;\n          (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n        };\n      });\n      // Deregister listeners on unmount\n      return function () {\n        deregisterList.forEach(function (deregister) {\n          return deregister();\n        });\n      };\n    }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);\n    /**\n     * Build the animation view\n     */\n    var View = /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _objectSpread2({\n      style: style,\n      ref: animationContainer\n    }, rest));\n    return {\n      View: View,\n      play: play,\n      stop: stop,\n      pause: pause,\n      setSpeed: setSpeed,\n      goToAndStop: goToAndStop,\n      goToAndPlay: goToAndPlay,\n      setDirection: setDirection,\n      playSegments: playSegments,\n      setSubframe: setSubframe,\n      getDuration: getDuration,\n      destroy: destroy,\n      animationContainerRef: animationContainer,\n      animationLoaded: animationLoaded,\n      animationItem: animationInstanceRef.current\n    };\n  };\n\n  // helpers\n  function getContainerVisibility(container) {\n    var _container$getBoundin = container.getBoundingClientRect(),\n      top = _container$getBoundin.top,\n      height = _container$getBoundin.height;\n    var current = window.innerHeight - top;\n    var max = window.innerHeight + height;\n    return current / max;\n  }\n  function getContainerCursorPosition(container, cursorX, cursorY) {\n    var _container$getBoundin2 = container.getBoundingClientRect(),\n      top = _container$getBoundin2.top,\n      left = _container$getBoundin2.left,\n      width = _container$getBoundin2.width,\n      height = _container$getBoundin2.height;\n    var x = (cursorX - left) / width;\n    var y = (cursorY - top) / height;\n    return {\n      x: x,\n      y: y\n    };\n  }\n  var useInitInteractivity = function useInitInteractivity(_ref) {\n    var wrapperRef = _ref.wrapperRef,\n      animationItem = _ref.animationItem,\n      mode = _ref.mode,\n      actions = _ref.actions;\n    React.useEffect(function () {\n      var wrapper = wrapperRef.current;\n      if (!wrapper || !animationItem || !actions.length) {\n        return;\n      }\n      animationItem.stop();\n      var scrollModeHandler = function scrollModeHandler() {\n        var assignedSegment = null;\n        var scrollHandler = function scrollHandler() {\n          var currentPercent = getContainerVisibility(wrapper);\n          // Find the first action that satisfies the current position conditions\n          var action = actions.find(function (_ref2) {\n            var visibility = _ref2.visibility;\n            return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];\n          });\n          // Skip if no matching action was found!\n          if (!action) {\n            return;\n          }\n          if (action.type === \"seek\" && action.visibility && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]);\n            //! goToAndStop must be relative to the start of the current segment\n            animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n          }\n          if (action.type === \"loop\") {\n            // Loop: Loop a given frames\n            if (assignedSegment === null) {\n              // if not playing any segments currently. play those segments and save to state\n              animationItem.playSegments(action.frames, true);\n              assignedSegment = action.frames;\n            } else {\n              // if playing any segments currently.\n              //check if segments in state are equal to the frames selected by action\n              if (assignedSegment !== action.frames) {\n                // if they are not equal. new segments are to be loaded\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              } else if (animationItem.isPaused) {\n                // if they are equal the play method must be called only if lottie is paused\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              }\n            }\n          }\n          if (action.type === \"play\" && animationItem.isPaused) {\n            // Play: Reset segments and continue playing full animation from current position\n            animationItem.resetSegments(true);\n            animationItem.play();\n          }\n          if (action.type === \"stop\") {\n            // Stop: Stop playback\n            animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n          }\n        };\n        document.addEventListener(\"scroll\", scrollHandler);\n        return function () {\n          document.removeEventListener(\"scroll\", scrollHandler);\n        };\n      };\n      var cursorModeHandler = function cursorModeHandler() {\n        var handleCursor = function handleCursor(_x, _y) {\n          var x = _x;\n          var y = _y;\n          // Resolve cursor position if cursor is inside container\n          if (x !== -1 && y !== -1) {\n            // Get container cursor position\n            var pos = getContainerCursorPosition(wrapper, x, y);\n            // Use the resolved position\n            x = pos.x;\n            y = pos.y;\n          }\n          // Find the first action that satisfies the current position conditions\n          var action = actions.find(function (_ref3) {\n            var position = _ref3.position;\n            if (position && Array.isArray(position.x) && Array.isArray(position.y)) {\n              return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];\n            }\n            if (position && !Number.isNaN(position.x) && !Number.isNaN(position.y)) {\n              return x === position.x && y === position.y;\n            }\n            return false;\n          });\n          // Skip if no matching action was found!\n          if (!action) {\n            return;\n          }\n          // Process action types:\n          if (action.type === \"seek\" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);\n            var yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);\n            animationItem.playSegments(action.frames, true);\n            animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);\n          }\n          if (action.type === \"loop\") {\n            animationItem.playSegments(action.frames, true);\n          }\n          if (action.type === \"play\") {\n            // Play: Reset segments and continue playing full animation from current position\n            if (animationItem.isPaused) {\n              animationItem.resetSegments(false);\n            }\n            animationItem.playSegments(action.frames);\n          }\n          if (action.type === \"stop\") {\n            animationItem.goToAndStop(action.frames[0], true);\n          }\n        };\n        var mouseMoveHandler = function mouseMoveHandler(ev) {\n          handleCursor(ev.clientX, ev.clientY);\n        };\n        var mouseOutHandler = function mouseOutHandler() {\n          handleCursor(-1, -1);\n        };\n        wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n        wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n        return function () {\n          wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n          wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n        };\n      };\n      switch (mode) {\n        case \"scroll\":\n          return scrollModeHandler();\n        case \"cursor\":\n          return cursorModeHandler();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode, animationItem]);\n  };\n  var useLottieInteractivity = function useLottieInteractivity(_ref4) {\n    var actions = _ref4.actions,\n      mode = _ref4.mode,\n      lottieObj = _ref4.lottieObj;\n    var animationItem = lottieObj.animationItem,\n      View = lottieObj.View,\n      animationContainerRef = lottieObj.animationContainerRef;\n    useInitInteractivity({\n      actions: actions,\n      animationItem: animationItem,\n      mode: mode,\n      wrapperRef: animationContainerRef\n    });\n    return View;\n  };\n\n  var _excluded = [\"style\", \"interactivity\"];\n  var Lottie = function Lottie(props) {\n    var _a, _b, _c;\n    var style = props.style,\n      interactivity = props.interactivity,\n      lottieProps = _objectWithoutProperties(props, _excluded);\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    var _useLottie = useLottie(lottieProps, style),\n      View = _useLottie.View,\n      play = _useLottie.play,\n      stop = _useLottie.stop,\n      pause = _useLottie.pause,\n      setSpeed = _useLottie.setSpeed,\n      goToAndStop = _useLottie.goToAndStop,\n      goToAndPlay = _useLottie.goToAndPlay,\n      setDirection = _useLottie.setDirection,\n      playSegments = _useLottie.playSegments,\n      setSubframe = _useLottie.setSubframe,\n      getDuration = _useLottie.getDuration,\n      destroy = _useLottie.destroy,\n      animationContainerRef = _useLottie.animationContainerRef,\n      animationLoaded = _useLottie.animationLoaded,\n      animationItem = _useLottie.animationItem;\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    React.useEffect(function () {\n      if (props.lottieRef) {\n        props.lottieRef.current = {\n          play: play,\n          stop: stop,\n          pause: pause,\n          setSpeed: setSpeed,\n          goToAndPlay: goToAndPlay,\n          goToAndStop: goToAndStop,\n          setDirection: setDirection,\n          playSegments: playSegments,\n          setSubframe: setSubframe,\n          getDuration: getDuration,\n          destroy: destroy,\n          animationContainerRef: animationContainerRef,\n          animationLoaded: animationLoaded,\n          animationItem: animationItem\n        };\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n      lottieObj: {\n        View: View,\n        play: play,\n        stop: stop,\n        pause: pause,\n        setSpeed: setSpeed,\n        goToAndStop: goToAndStop,\n        goToAndPlay: goToAndPlay,\n        setDirection: setDirection,\n        playSegments: playSegments,\n        setSubframe: setSubframe,\n        getDuration: getDuration,\n        destroy: destroy,\n        animationContainerRef: animationContainerRef,\n        animationLoaded: animationLoaded,\n        animationItem: animationItem\n      },\n      actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n      mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\"\n    });\n  };\n\n  Object.defineProperty(exports, 'LottiePlayer', {\n    enumerable: true,\n    get: function () { return lottie__default[\"default\"]; }\n  });\n  exports[\"default\"] = Lottie;\n  exports.useLottie = useLottie;\n  exports.useLottieInteractivity = useLottieInteractivity;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=index.umd.js.map\n"],"names":["factory","exports","lottie","React","_interopDefaultLegacy","e","lottie__default","React__default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","value","_toPropertyKey","arg","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","call","String","Number","defineProperty","configurable","writable","obj","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","_arrayLikeToArray","arr","len","arr2","_excluded$1","useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","name","assetsPath","rendererSettings","rest","_useState2","_arrayWithHoles","Array","isArray","useState","_iterableToArrayLimit","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","return","_unsupportedIterableToArray","o","minLen","n","toString","slice","constructor","from","test","_nonIterableRest","animationLoaded","setAnimationLoaded","animationInstanceRef","useRef","animationContainer","loadAnimation","_a","forcedConfigs","current","destroy","config","container","useEffect","onUnmount","resetSegments","currentRawFrame","setSegment","listeners","partialListeners","handler","listener","deregisterList","map","addEventListener","removeEventListener","deregister","View","createElement","ref","play","stop","pause","setSpeed","speed","goToAndStop","isFrame","goToAndPlay","setDirection","direction","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","animationContainerRef","animationItem","useInitInteractivity","_ref","wrapperRef","mode","actions","assignedSegment","scrollHandler","handleCursor","mouseMoveHandler","mouseOutHandler","wrapper","_container$getBoundin","top","height","currentPercent","getBoundingClientRect","window","innerHeight","action","find","_ref2","visibility","type","frames","frameToGo","Math","ceil","firstFrame","isPaused","document","_y","x","y","cursorX","cursorY","_container$getBoundin2","pos","left","width","_ref3","position","isNaN","xPercent","yPercent","ev","clientX","clientY","useLottieInteractivity","_ref4","lottieObj","_excluded","get","_b","_c","interactivity","_useLottie","__webpack_require__"],"sourceRoot":""}